<?xml version="1.0" encoding="utf-8"?>
<androidx.core.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fillViewport="true"
    android:background="@drawable/onezerobg"
    tools:context=".LessonTwoFragment">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <TextView
            android:id="@+id/lesson2_title"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_margin="16dp"
            android:background="@drawable/rounded_bg_scoreboardrow"
            android:text="Operators"
            android:textAlignment="center"
            android:textColor="#FFFFFF"
            android:textSize="24sp"
            android:textStyle="bold|italic"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <TextView
            android:id="@+id/textView20"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="30dp"
            android:layout_marginEnd="297dp"
            android:text="Introduction"
            android:textColor="#FFFFFF"
            android:textSize="18sp"
            android:textStyle="bold|italic"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="@+id/lesson2_title"
            app:layout_constraintTop_toBottomOf="@+id/lesson2_title" />

        <TextView
            android:id="@+id/textView47"
            android:layout_width="350dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:text="In addition to data types, in the C language are also defined operators. There are several types of operators:"
            android:textColor="#FFFFFF"
            app:layout_constraintStart_toStartOf="@+id/textView20"
            app:layout_constraintTop_toBottomOf="@+id/textView20" />

        <TextView
            android:id="@+id/textView48"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:text="• Placement operators"
            android:textColor="#FFFFFF"
            app:layout_constraintStart_toStartOf="@+id/textView47"
            app:layout_constraintTop_toBottomOf="@+id/textView47" />

        <TextView
            android:id="@+id/textView49"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textColor="#FFFFFF"
            android:text="• Arithmetic operators"
            app:layout_constraintStart_toStartOf="@+id/textView48"
            app:layout_constraintTop_toBottomOf="@+id/textView48" />

        <TextView
            android:id="@+id/textView50"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textColor="#FFFFFF"
            android:text="• Addition / subtraction operators"
            app:layout_constraintStart_toStartOf="@+id/textView49"
            app:layout_constraintTop_toBottomOf="@+id/textView49" />

        <TextView
            android:id="@+id/textView51"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textColor="#FFFFFF"
            android:text="• Relational operators"
            app:layout_constraintStart_toStartOf="@+id/textView50"
            app:layout_constraintTop_toBottomOf="@+id/textView50" />

        <TextView
            android:id="@+id/textView52"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textColor="#FFFFFF"
            android:text="• Logical operators"
            app:layout_constraintStart_toStartOf="@+id/textView51"
            app:layout_constraintTop_toBottomOf="@+id/textView51" />

        <TextView
            android:id="@+id/textView53"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="30dp"
            android:text="Placement operators"
            android:textSize="18sp"
            android:textColor="#FFFFFF"
            android:textStyle="bold|italic"
            app:layout_constraintStart_toStartOf="@+id/textView52"
            app:layout_constraintTop_toBottomOf="@+id/textView52" />

        <TextView
            android:id="@+id/textView54"
            android:layout_width="350dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:text="In the C language, the meaning of placement operators is to put (give) a value to a variable."
            android:textColor="#FFFFFF"
            app:layout_constraintStart_toStartOf="@+id/textView53"
            app:layout_constraintTop_toBottomOf="@+id/textView53" />

        <TextView
            android:id="@+id/example_lesson2"
            android:layout_width="80dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="20dp"
            android:background="@drawable/rounded_background"
            android:text="Example"
            android:textAlignment="center"
            android:textColor="#FFFFFF"
            android:textSize="18sp"
            android:textStyle="bold"
            app:layout_constraintStart_toStartOf="@+id/textView54"
            app:layout_constraintTop_toBottomOf="@+id/textView54" />

        <ImageView
            android:id="@+id/imageView6"
            android:layout_width="365dp"
            android:layout_height="93dp"
            android:src="@drawable/lesson2_placement"
            app:layout_constraintStart_toStartOf="@+id/example_lesson2"
            app:layout_constraintTop_toBottomOf="@+id/example_lesson2" />

        <TextView
            android:id="@+id/textView55"
            android:layout_width="375dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="-10dp"
            android:text="• The value to the right of the placement operator is called an rvalue and not variable."
            android:textColor="#FFFFFF"
            app:layout_constraintStart_toStartOf="@+id/imageView6"
            app:layout_constraintTop_toBottomOf="@+id/imageView6" />

        <TextView
            android:id="@+id/textView56"
            android:layout_width="375dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:text="• The value to the left of the placement operator is called an lvalue and its value variable to the value of rvalue."
            android:textColor="#FFFFFF"
            app:layout_constraintStart_toStartOf="@+id/textView55"
            app:layout_constraintTop_toBottomOf="@+id/textView55" />

        <TextView
            android:id="@+id/textView57"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textColor="#FFFFFF"
            android:text="• Be careful of trying to put between inappropriate values!"
            app:layout_constraintStart_toStartOf="@+id/textView56"
            app:layout_constraintTop_toBottomOf="@+id/textView56" />

        <TextView
            android:id="@+id/textView58"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="30dp"
            android:text="Arithmetic operators"
            android:textSize="18sp"
            android:textStyle="bold|italic"
            android:textColor="#FFFFFF"
            app:layout_constraintStart_toStartOf="@+id/textView57"
            app:layout_constraintTop_toBottomOf="@+id/textView57" />

        <TextView
            android:id="@+id/textView59"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textColor="#FFFFFF"
            android:text="• Most commonly used. include:"
            app:layout_constraintStart_toStartOf="@+id/textView58"
            app:layout_constraintTop_toBottomOf="@+id/textView58" />

        <TextView
            android:id="@+id/textView60"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textColor="#FFFFFF"
            android:text="• (+, -)  Unary and binary plus and minus"
            app:layout_constraintStart_toStartOf="@+id/textView59"
            app:layout_constraintTop_toBottomOf="@+id/textView59" />

        <TextView
            android:id="@+id/textView61"
            android:layout_width="350dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:text="• (*, /, %) Multiplication, division and remainder have precedence over addition and subtraction."
            android:textColor="#FFFFFF"
            app:layout_constraintStart_toStartOf="@+id/textView60"
            app:layout_constraintTop_toBottomOf="@+id/textView60" />

        <TextView
            android:id="@+id/textView62"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:layout_marginTop="10dp"
            android:text="x+=2;  consider to x = x+2;"
            app:layout_constraintStart_toStartOf="@+id/textView61"
            app:layout_constraintTop_toBottomOf="@+id/textView61" />

        <TextView
            android:id="@+id/textView63"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="30dp"
            android:text="Arithmetic operators - division"
            android:textSize="18sp"
            android:textStyle="bold|italic"
            android:textColor="#FFFFFF"
            app:layout_constraintStart_toStartOf="@+id/textView62"
            app:layout_constraintTop_toBottomOf="@+id/textView62" />

        <TextView
            android:id="@+id/textView64"
            android:layout_width="350dp"
            android:layout_height="wrap_content"
            android:textColor="#FFFFFF"
            android:layout_marginTop="10dp"
            android:text="• Note: dividing an integer by an integer returns us As a result a whole number!"
            app:layout_constraintStart_toStartOf="@+id/textView63"
            app:layout_constraintTop_toBottomOf="@+id/textView63" />

        <TextView
            android:id="@+id/textView65"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:text="• The computer calculates that:  5/2 = 2 , 3/2 = 1 , 3/4 = 0"
            android:textColor="#FFFFFF"
            app:layout_constraintStart_toStartOf="@+id/textView64"
            app:layout_constraintTop_toBottomOf="@+id/textView64" />

        <TextView
            android:id="@+id/textView66"
            android:layout_width="375dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textColor="#FFFFFF"
            android:text="• This situation comes to make sure that if we work with numbers integers we can continue working with integers."
            app:layout_constraintStart_toStartOf="@+id/textView65"
            app:layout_constraintTop_toBottomOf="@+id/textView65" />

        <TextView
            android:id="@+id/textView67"
            android:layout_width="350dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:text="• If the exact value is important to us, we can calculate the remainder using % or work with double"
            android:textColor="#FFFFFF"
            app:layout_constraintStart_toStartOf="@+id/textView66"
            app:layout_constraintTop_toBottomOf="@+id/textView66" />

        <TextView
            android:id="@+id/textView68"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:textColor="#FFFFFF"
            android:text="• Note that remainder only works with integers!"
            app:layout_constraintStart_toStartOf="@+id/textView67"
            app:layout_constraintTop_toBottomOf="@+id/textView67" />

        <TextView
            android:id="@+id/lesson2_test"
            android:layout_width="150dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="30dp"
            android:background="@drawable/rounded_bg_scoreboardrow"
            android:text="Lesson Test"
            android:textAlignment="center"
            android:textColor="#FFFFFF"
            android:textSize="24sp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/textView68" />

        <TextView
            android:id="@+id/textView69"
            android:layout_width="350dp"
            android:layout_height="wrap_content"
            android:layout_marginTop="10dp"
            android:text="Question 1: What will be the output of the following code?"
            android:textColor="#FFFFFF"
            android:textSize="18sp"
            android:textStyle="bold|italic"
            app:layout_constraintStart_toStartOf="@+id/textView68"
            app:layout_constraintTop_toBottomOf="@+id/lesson2_test" />


    </androidx.constraintlayout.widget.ConstraintLayout>
</androidx.core.widget.NestedScrollView>
